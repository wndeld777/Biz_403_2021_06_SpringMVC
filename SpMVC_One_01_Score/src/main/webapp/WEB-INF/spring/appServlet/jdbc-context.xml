<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="fileEncoding" value="UTF-8" />
		<property name="locations">
			<list>
				<value>/WEB-INF/spring/config/mysql.properties</value>
				<value>/WEB-INF/spring/config/string.properties</value>
			</list>
	</property>
	
	</bean>
	
	 <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	 	<property name="driverClassName" value="${mysql.driver}"/>
	 	<property name="url" value="${mysql.url}"/>
	 	<property name="username" value="${mysql.username}"/>
	 	<property name="password" value="${mysql.password}"/>
	 </bean>
	 
	 <!-- java Code를 사용하여 DBMS에 SQL을 보내고 결과를 수신하기 위한 Helper class
	 	JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);
	 	JdbcTemplate 클래스를 사용하여 객체를 생성할때는
	 	생성자 method에 반드시 dataSource를 전달해 주어야 한다 -->
	 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	 	<constructor-arg ref="dataSource" />
	 </bean>
	 
</beans>
